lpmax[lpmax==min(dat$day)]<-NA
# summarize estimates
ann.res<-array(NA, dim=c(max(dat$year)-min(dat$year)+1,3),dimnames=list(c(min(dat$year):max(dat$year)),c("mean","2.5%","97.5%")))
res<-apply(lpmax,c(2),mean,na.rm=T)
ann.res[names(res),"mean"]<-res
res<-apply(lpmax,c(2),quantile,probs=0.025,na.rm=T)
ann.res[names(res),"2.5%"]<-res
res<-apply(lpmax,c(2),quantile,probs=0.975,na.rm=T)
ann.res[names(res),"97.5%"]<-res
# get estimate of trend in date of peak detectability over years
do.lm<-function(x) {
lmres<-lm(x~as.numeric(names(x)))$coefficients
return(lmres)
}
r<-matrix(NA,dim(lpmax)[1],2)
for (o in 1:(dim(lpmax)[1])) {
# if(!is.na(sum(lpmax[o,]))) {
lm(lpmax[o,]~as.numeric(colnames(lpmax)))$coefficients->r[o,]
#}
}
slopevec<-as.vector(r[,2])
intercept<-mean(r[,1],na.rm=T)
slope<-mean(r[,2],na.rm=T)
cat(paste("summary results","j pod"),"\n",
paste("annual change of activity peak:", round(mean(slopevec,na.rm=T),digits=2),"days"),
paste("confidence interval from", round(quantile(slopevec,0.025,na.rm=T),digits=2),
"to",round(quantile(slopevec,0.975,na.rm=T),digits=2)),
"\n","mean estimate of activity peak","as date",
as.character(as.Date(x=c(ann.res[,colnames(ann.res)=="mean"]),origin=c(paste(row.names(ann.res),"-01-01",sep="")))),"\n",
sep="\n","as day of the year",
paste(rownames(ann.res),round(ann.res[,"mean"])))
### plot estimates of peak detectability over all years
quartz()
par(mfrow=c(1,1))
par(mai=c(1,1,1,0.5))
x=rownames(ann.res)
y=ann.res[,"mean"]
plot(x,y,xlab="",ylab="",axes=F,main=paste("Peak Detection Probability","\n","J Pod"),
ylim=c(min(ann.res, na.rm = TRUE),max(ann.res, na.rm = TRUE)),pch=16,type="p", col="black")
lines(x,ann.res[,"2.5%"],col="grey",lwd=2)
lines(x,ann.res[,"97.5%"],col="grey",lwd=2)
axis(side=1,at=x)
axis(side=2,at=c(91,122,152),
labels=c("1Apr","1May","1Jun"))
abline(a=intercept,b=slope,lty=2,col=colors()[200])
### Plot annual detectability pattern
# loop over all years
years<-sort(unique(as.numeric((dat$year))))
for (xj in 1:length(years)) {
j<-years[xj]
# Get BUGS estimates
res.chains<-out$sims.array[,,paste("lp[",xj[1],",",1:(max(dat$day)-min(dat$day)+1),"]",sep="")]
res=plogis(apply(res.chains,MARGIN=c(length(dim(res.chains))),quantile,probs=c(.025,.5,.975)))
### Plot "naive" estimate of detectability
# prepare bars to compare barplot of observation data (bars) with estimates (line); barheight represents weekly proportion of detection events divided by all surveys
barwidth<-7
z<-1
for(m in seq(from=min(dat$day),to=max(dat$day),by=barwidth)) {
dat$barpos[dat$day >= m & dat$day < m+barwidth]<-z
z<-z+1
}
barheight<-rep(NA,times=max(dat$day)+7)
names(barheight)<-1:max(dat$day)
# height of the bars equals to a seven day successful obs to all obs ratio
n<-(max(dat$day)-min(dat$day)+1)
res.height<-tapply(dat$ndet[dat$year==j],dat$barpos[dat$year==j],mean)
barheight[as.numeric(names(res.height))*7-3+min(dat$day)]<-res.height
# plot bars
quartz()
barplot(as.numeric(barheight[min(dat$day):max(dat$day)]),
width=1,space=0,ylim=c(0,max(res[3,])),xlab="", ylab="Detection Probability",
main=paste("J pod",j),border=NA,axes=F)
### Plot model estimates
# plot seasonal estimates of detectability p
lines(res[3,],lty=3,col=1,lwd=2.5) # lower bound of the 95% CI
lines(res[2,],lty=1,col=1,lwd=2) # median
lines(res[1,],lty=3,col=1,lwd=2.5) # upper bound of the 95% CI
axis(2)
axis(side=1,at=c(1,32,61),
labels=c("1Jan","1Feb","1Mar"))
}
quartz()
par(mfrow=c(1,1))
par(mai=c(1,1,1,0.5))
x=rownames(ann.res)
y=ann.res[,"mean"]
plot(x,y,xlab="",ylab="",axes=F,main=paste("Peak Detection Probability","\n","J Pod"),
ylim=c(min(ann.res, na.rm = TRUE),max(ann.res, na.rm = TRUE)),pch=16,type="p", col="black")
lines(x,ann.res[,"2.5%"],col="grey",lwd=2)
lines(x,ann.res[,"97.5%"],col="grey",lwd=2)
axis(side=1,at=x)
axis(side=2,at=c(91,122,152),
labels=c("1Apr","1May","1Jun"))
abline(a=intercept,b=slope,lty=2,col=colors()[200])
### Plot annual detectability pattern
# loop over all years
years<-sort(unique(as.numeric((dat$year))))
for (xj in 1:length(years)) {
j<-years[xj]
# Get BUGS estimates
res.chains<-out$sims.array[,,paste("lp[",xj[1],",",1:(max(dat$day)-min(dat$day)+1),"]",sep="")]
res=plogis(apply(res.chains,MARGIN=c(length(dim(res.chains))),quantile,probs=c(.025,.5,.975)))
### Plot "naive" estimate of detectability
# prepare bars to compare barplot of observation data (bars) with estimates (line); barheight represents weekly proportion of detection events divided by all surveys
barwidth<-7
z<-1
for(m in seq(from=min(dat$day),to=max(dat$day),by=barwidth)) {
dat$barpos[dat$day >= m & dat$day < m+barwidth]<-z
z<-z+1
}
barheight<-rep(NA,times=max(dat$day)+7)
names(barheight)<-1:max(dat$day)
# height of the bars equals to a seven day successful obs to all obs ratio
n<-(max(dat$day)-min(dat$day)+1)
res.height<-tapply(dat$ndet[dat$year==j],dat$barpos[dat$year==j],mean)
barheight[as.numeric(names(res.height))*7-3+min(dat$day)]<-res.height
# plot bars
quartz()
barplot(as.numeric(barheight[min(dat$day):max(dat$day)]),
width=1,space=0,ylim=c(0,max(res[3,])),xlab="", ylab="Detection Probability",
main=paste("J pod",j),border=NA,axes=F)
### Plot model estimates
# plot seasonal estimates of detectability p
lines(res[3,],lty=3,col=1,lwd=2.5) # lower bound of the 95% CI
lines(res[2,],lty=1,col=1,lwd=2) # median
lines(res[1,],lty=3,col=1,lwd=2.5) # upper bound of the 95% CI
axis(2)
axis(side=2,at=c(91,122,152),
labels=c("1Apr","1May","1Jun"))
}
quartz()
par(mfrow=c(1,1))
par(mai=c(1,1,1,0.5))
x=rownames(ann.res)
y=ann.res[,"mean"]
plot(x,y,xlab="",ylab="",axes=F,main=paste("Peak Detection Probability","\n","J Pod"),
ylim=c(min(ann.res, na.rm = TRUE),max(ann.res, na.rm = TRUE)),pch=16,type="p", col="black")
lines(x,ann.res[,"2.5%"],col="grey",lwd=2)
lines(x,ann.res[,"97.5%"],col="grey",lwd=2)
axis(side=1,at=x)
axis(side=2,at=c(91,122,152),
labels=c("1Apr","1May","1Jun"))
abline(a=intercept,b=slope,lty=2,col=colors()[200])
### Plot annual detectability pattern
# loop over all years
years<-sort(unique(as.numeric((dat$year))))
for (xj in 1:length(years)) {
j<-years[xj]
# Get BUGS estimates
res.chains<-out$sims.array[,,paste("lp[",xj[1],",",1:(max(dat$day)-min(dat$day)+1),"]",sep="")]
res=plogis(apply(res.chains,MARGIN=c(length(dim(res.chains))),quantile,probs=c(.025,.5,.975)))
### Plot "naive" estimate of detectability
# prepare bars to compare barplot of observation data (bars) with estimates (line); barheight represents weekly proportion of detection events divided by all surveys
barwidth<-7
z<-1
for(m in seq(from=min(dat$day),to=max(dat$day),by=barwidth)) {
dat$barpos[dat$day >= m & dat$day < m+barwidth]<-z
z<-z+1
}
barheight<-rep(NA,times=max(dat$day)+7)
names(barheight)<-1:max(dat$day)
# height of the bars equals to a seven day successful obs to all obs ratio
n<-(max(dat$day)-min(dat$day)+1)
res.height<-tapply(dat$ndet[dat$year==j],dat$barpos[dat$year==j],mean)
barheight[as.numeric(names(res.height))*7-3+min(dat$day)]<-res.height
# plot bars
quartz()
barplot(as.numeric(barheight[min(dat$day):max(dat$day)]),
width=1,space=0,ylim=c(0,max(res[3,])),xlab="", ylab="Detection Probability",
main=paste("J pod",j),border=NA,axes=F)
### Plot model estimates
# plot seasonal estimates of detectability p
lines(res[3,],lty=3,col=1,lwd=2.5) # lower bound of the 95% CI
lines(res[2,],lty=1,col=1,lwd=2) # median
lines(res[1,],lty=3,col=1,lwd=2.5) # upper bound of the 95% CI
axis(2)
axis(side=1,at=c(91,122,152),
labels=c("1Apr","1May","1Jun"))
}
head(dat)
range(dat$day)
findmax.fn<-function(x) {
mean(which(x==max(x)))
}
lpmax<-array(data=NA,dim=c(out$n.sims,nyear))
dimnames(lpmax)<-list(c(1:out$n.sims),c(sort(unique(dat$year))))
for (xj in sort(unique(as.numeric(factor(dat$year))))) {
lpmax[,xj]<-apply(out$sims.array[,,paste("lp[",xj[1],",",1:(max(dat$day)-min(dat$day)+1),"]",sep="")],MARGIN=c(if(out$n.chains>1) 1:2 else 1),findmax.fn)
}
lpmax<-lpmax+min(dat$day)-1
lpmax[lpmax==max(dat$day)]<-NA
lpmax[lpmax==min(dat$day)]<-NA
# summarize estimates
ann.res<-array(NA, dim=c(max(dat$year)-min(dat$year)+1,3),dimnames=list(c(min(dat$year):max(dat$year)),c("mean","2.5%","97.5%")))
res<-apply(lpmax,c(2),mean,na.rm=T)
ann.res[names(res),"mean"]<-res
res<-apply(lpmax,c(2),quantile,probs=0.025,na.rm=T)
ann.res[names(res),"2.5%"]<-res
res<-apply(lpmax,c(2),quantile,probs=0.975,na.rm=T)
ann.res[names(res),"97.5%"]<-res
# get estimate of trend in date of peak detectability over years
do.lm<-function(x) {
lmres<-lm(x~as.numeric(names(x)))$coefficients
return(lmres)
}
r<-matrix(NA,dim(lpmax)[1],2)
for (o in 1:(dim(lpmax)[1])) {
# if(!is.na(sum(lpmax[o,]))) {
lm(lpmax[o,]~as.numeric(colnames(lpmax)))$coefficients->r[o,]
#}
}
slopevec<-as.vector(r[,2])
intercept<-mean(r[,1],na.rm=T)
slope<-mean(r[,2],na.rm=T)
### Write results (in console if argument file is not specified in function cat)
cat(paste("summary results","j pod"),"\n",
paste("annual change of activity peak:", round(mean(slopevec,na.rm=T),digits=2),"days"),
paste("confidence interval from", round(quantile(slopevec,0.025,na.rm=T),digits=2),
"to",round(quantile(slopevec,0.975,na.rm=T),digits=2)),
"\n","mean estimate of activity peak","as date",
as.character(as.Date(x=c(ann.res[,colnames(ann.res)=="mean"]),origin=c(paste(row.names(ann.res),"-01-01",sep="")))),"\n",
sep="\n","as day of the year",
paste(rownames(ann.res),round(ann.res[,"mean"])))
### plot estimates of peak detectability over all years
quartz()
par(mfrow=c(1,1))
par(mai=c(1,1,1,0.5))
x=rownames(ann.res)
y=ann.res[,"mean"]
plot(x,y,xlab="",ylab="",axes=F,main=paste("Peak Detection Probability","\n","J Pod"),
ylim=c(min(ann.res, na.rm = TRUE),max(ann.res, na.rm = TRUE)),pch=16,type="p", col="black")
lines(x,ann.res[,"2.5%"],col="grey",lwd=2)
lines(x,ann.res[,"97.5%"],col="grey",lwd=2)
axis(side=1,at=x)
axis(side=2,at=c(91,122,152),
labels=c("1Apr","1May","1Jun"))
abline(a=intercept,b=slope,lty=2,col=colors()[200])
quartz()
par(mfrow=c(1,1))
par(mai=c(1,1,1,0.5))
x=rownames(ann.res)
y=ann.res[,"mean"]
plot(x,y,xlab="",ylab="",axes=F,main=paste("Peak Detection Probability","\n","J Pod"),
ylim=c(min(ann.res, na.rm = TRUE),max(ann.res, na.rm = TRUE)),pch=16,type="p", col="black")
lines(x,ann.res[,"2.5%"],col="grey",lwd=2)
lines(x,ann.res[,"97.5%"],col="grey",lwd=2)
axis(side=1,at=x)
axis(side=2,at=c(91,122,152,183),
labels=c("1Apr","1May","1Jun","1Jul"))
abline(a=intercept,b=slope,lty=2,col=colors()[200])
dat$day)-min(dat$day)+1),"]",sep="")]
res
dat$day
max(dat$day)
min(dat$day)
years
years<-sort(unique(as.numeric((dat$year))))
for (xj in 1:length(years)) {
j<-years[xj]
# Get BUGS estimates
res.chains<-out$sims.array[,,paste("lp[",xj[1],",",1:(max(dat$day)-min(dat$day)+1),"]",sep="")]
res=plogis(apply(res.chains,MARGIN=c(length(dim(res.chains))),quantile,probs=c(.025,.5,.975)))
### Plot "naive" estimate of detectability
# prepare bars to compare barplot of observation data (bars) with estimates (line); barheight represents weekly proportion of detection events divided by all surveys
barwidth<-7
z<-1
for(m in seq(from=min(dat$day),to=max(dat$day),by=barwidth)) {
dat$barpos[dat$day >= m & dat$day < m+barwidth]<-z
z<-z+1
}
barheight<-rep(NA,times=max(dat$day)+7)
names(barheight)<-1:max(dat$day)
# height of the bars equals to a seven day successful obs to all obs ratio
n<-(max(dat$day)-min(dat$day)+1)
res.height<-tapply(dat$ndet[dat$year==j],dat$barpos[dat$year==j],mean)
barheight[as.numeric(names(res.height))*7-3+min(dat$day)]<-res.height
# plot bars
quartz()
barplot(as.numeric(barheight[min(dat$day):max(dat$day)]),
width=1,space=0,ylim=c(0,max(res[3,])),xlab="", ylab="Detection Probability",
main=paste("J pod",j),border=NA,axes=F)
### Plot model estimates
# plot seasonal estimates of detectability p
lines(res[3,],lty=3,col=1,lwd=2.5) # lower bound of the 95% CI
lines(res[2,],lty=1,col=1,lwd=2) # median
lines(res[1,],lty=3,col=1,lwd=2.5) # upper bound of the 95% CI
axis(2)
axis(side=1,at=c(91,122,152),
labels=c("1Apr","1May","1Jun"))
}
xj=1
years[xj]
j<-years[xj]
# Get BUGS estimates
res.chains<-out$sims.array[,,paste("lp[",xj[1],",",1:(max(dat$day)-min(dat$day)+1),"]",sep="")]
res.chains
#Look at
out<-jags.out$BUGSoutput
# Save model output
save(out,file="jpod out season2")
j<-years[xj]
# Get BUGS estimates
res.chains<-out$sims.array[,,paste("lp[",xj[1],",",1:(max(dat$day)-min(dat$day)+1),"]",sep="")]
res=plogis(apply(res.chains,MARGIN=c(length(dim(res.chains))),quantile,probs=c(.025,.5,.975)))
### Plot "naive" estimate of detectability
# prepare bars to compare barplot of observation data (bars) with estimates (line); barheight represents weekly proportion of detection events divided by all surveys
barwidth<-7
z<-1
for(m in seq(from=min(dat$day),to=max(dat$day),by=barwidth)) {
dat$barpos[dat$day >= m & dat$day < m+barwidth]<-z
z<-z+1
}
barheight<-rep(NA,times=max(dat$day)+7)
names(barheight)<-1:max(dat$day)
# height of the bars equals to a seven day successful obs to all obs ratio
n<-(max(dat$day)-min(dat$day)+1)
res.height<-tapply(dat$ndet[dat$year==j],dat$barpos[dat$year==j],mean)
barheight[as.numeric(names(res.height))*7-3+min(dat$day)]<-res.height
# plot bars
quartz()
barplot(as.numeric(barheight[min(dat$day):max(dat$day)]),
width=1,space=0,ylim=c(0,max(res[3,])),xlab="", ylab="Detection Probability",
main=paste("J pod",j),border=NA,axes=F)
### Plot model estimates
# plot seasonal estimates of detectability p
lines(res[3,],lty=3,col=1,lwd=2.5) # lower bound of the 95% CI
lines(res[2,],lty=1,col=1,lwd=2) # median
lines(res[1,],lty=3,col=1,lwd=2.5) # upper bound of the 95% CI
axis(2)
axis(side=1,at=c(91,122,152),
labels=c("1Apr","1May","1Jun"))
for (xj in 1:length(years)) {
j<-years[xj]
# Get BUGS estimates
res.chains<-out$sims.array[,,paste("lp[",xj[1],",",1:(max(dat$day)-min(dat$day)+1),"]",sep="")]
res=plogis(apply(res.chains,MARGIN=c(length(dim(res.chains))),quantile,probs=c(.025,.5,.975)))
### Plot "naive" estimate of detectability
# prepare bars to compare barplot of observation data (bars) with estimates (line); barheight represents weekly proportion of detection events divided by all surveys
barwidth<-7
z<-1
for(m in seq(from=min(dat$day),to=max(dat$day),by=barwidth)) {
dat$barpos[dat$day >= m & dat$day < m+barwidth]<-z
z<-z+1
}
barheight<-rep(NA,times=max(dat$day)+7)
names(barheight)<-1:max(dat$day)
# height of the bars equals to a seven day successful obs to all obs ratio
n<-(max(dat$day)-min(dat$day)+1)
res.height<-tapply(dat$ndet[dat$year==j],dat$barpos[dat$year==j],mean)
barheight[as.numeric(names(res.height))*7-3+min(dat$day)]<-res.height
# plot bars
quartz()
barplot(as.numeric(barheight[min(dat$day):max(dat$day)]),
width=1,space=0,ylim=c(0,max(res[3,])),xlab="", ylab="Detection Probability",
main=paste("J pod",j),border=NA,axes=F)
### Plot model estimates
# plot seasonal estimates of detectability p
lines(res[3,],lty=3,col=1,lwd=2.5) # lower bound of the 95% CI
lines(res[2,],lty=1,col=1,lwd=2) # median
lines(res[1,],lty=3,col=1,lwd=2.5) # upper bound of the 95% CI
axis(2)
axis(side=1,at=c(91,122,152),
labels=c("1Apr","1May","1Jun"))
}
dev.off()
min(dat$day)
max(dat$day)
j<-years[xj]
# Get BUGS estimates
res.chains<-out$sims.array[,,paste("lp[",xj[1],",",1:(max(dat$day)-min(dat$day)+1),"]",sep="")]
res=plogis(apply(res.chains,MARGIN=c(length(dim(res.chains))),quantile,probs=c(.025,.5,.975)))
### Plot "naive" estimate of detectability
# prepare bars to compare barplot of observation data (bars) with estimates (line); barheight represents weekly proportion of detection events divided by all surveys
barwidth<-7
z<-1
for(m in seq(from=min(dat$day),to=max(dat$day),by=barwidth)) {
dat$barpos[dat$day >= m & dat$day < m+barwidth]<-z
z<-z+1
}
barheight<-rep(NA,times=max(dat$day)+7)
### Plot annual detectability pattern
# loop over all years
years<-sort(unique(as.numeric((dat$year))))
for (xj in 1:length(years)) {
j<-years[xj]
# Get BUGS estimates
res.chains<-out$sims.array[,,paste("lp[",xj[1],",",1:(max(dat$day)-min(dat$day)+1),"]",sep="")]
res=plogis(apply(res.chains,MARGIN=c(length(dim(res.chains))),quantile,probs=c(.025,.5,.975)))
### Plot "naive" estimate of detectability
# prepare bars to compare barplot of observation data (bars) with estimates (line); barheight represents weekly proportion of detection events divided by all surveys
barwidth<-7
z<-1
for(m in seq(from=min(dat$day),to=max(dat$day),by=barwidth)) {
dat$barpos[dat$day >= m & dat$day < m+barwidth]<-z
z<-z+1
}
barheight<-rep(NA,times=max(dat$day)+7)
names(barheight)<-min(dat$day):max(dat$day)
# height of the bars equals to a seven day successful obs to all obs ratio
n<-(max(dat$day)-min(dat$day)+1)
res.height<-tapply(dat$ndet[dat$year==j],dat$barpos[dat$year==j],mean)
barheight[as.numeric(names(res.height))*7-3+min(dat$day)]<-res.height
# plot bars
quartz()
barplot(as.numeric(barheight[min(dat$day):max(dat$day)]),
width=1,space=0,ylim=c(0,max(res[3,])),xlab="", ylab="Detection Probability",
main=paste("J pod",j),border=NA,axes=F)
### Plot model estimates
# plot seasonal estimates of detectability p
lines(res[3,],lty=3,col=1,lwd=2.5) # lower bound of the 95% CI
lines(res[2,],lty=1,col=1,lwd=2) # median
lines(res[1,],lty=3,col=1,lwd=2.5) # upper bound of the 95% CI
axis(2)
axis(side=1,at=c(91,122,152),
labels=c("1Apr","1May","1Jun"))
}
for(m in seq(from=min(dat$day),to=max(dat$day),by=barwidth)) {
dat$barpos[dat$day >= m & dat$day < m+barwidth]<-z
z<-z+1
}
barheight<-rep(NA,times=max(dat$day)+7)
names(barheight)<-min(dat$day):max(dat$day)
names(barheight)
max(dat$day)
barheight<-rep(NA,times=length(min(dat$day):max(dat$day))
names(barheight)<-min(dat$day):max(dat$day)
# height of the bars equals to a seven day successful obs to all obs ratio
n<-(max(dat$day)-min(dat$day)+1)
res.height<-tapply(dat$ndet[dat$year==j],dat$barpos[dat$year==j],mean)
barheight[as.numeric(names(res.height))*7-3+min(dat$day)]<-res.height
# plot bars
quartz()
barplot(as.numeric(barheight[min(dat$day):max(dat$day)]),
width=1,space=0,ylim=c(0,max(res[3,])),xlab="", ylab="Detection Probability",
main=paste("J pod",j),border=NA,axes=F)
### Plot model estimates
# plot seasonal estimates of detectability p
lines(res[3,],lty=3,col=1,lwd=2.5) # lower bound of the 95% CI
lines(res[2,],lty=1,col=1,lwd=2) # median
lines(res[1,],lty=3,col=1,lwd=2.5) # upper bound of the 95% CI
axis(2)
axis(side=1,at=c(91,122,152),
labels=c("1Apr","1May","1Jun"))
}
dev.off()
barheight[as.numeric(names(res.height))*7-3+min(dat$day)]<-res.height
barheight
res.height
names(res.height))*7
as.numeric(names(res.height))*7
min(dat$day):max(dat$day)
n
tapply(dat$ndet[dat$year==j],dat$barpos[dat$year==j],mean)
names(res.height))*7
as.numeric(names(res.height))*7
min(dat$day)
as.numeric(names(res.height))*7
res.height
barheight
quartz()
par(mfrow=c(1,1))
par(mai=c(1,1,1,0.5))
x=rownames(ann.res)
y=ann.res[,"mean"]
plot(x,y,xlab="",ylab="",axes=F,main=paste("Peak Detection Probability","\n","J Pod"),
ylim=c(min(ann.res, na.rm = TRUE),max(ann.res, na.rm = TRUE)),pch=16,type="p", col="black")
lines(x,ann.res[,"2.5%"],col="grey",lwd=2)
lines(x,ann.res[,"97.5%"],col="grey",lwd=2)
axis(side=1,at=x)
axis(side=2,at=c(91,122,152,183),
labels=c("1Apr","1May","1Jun","1Jul"))
abline(a=intercept,b=slope,lty=2,col=colors()[200])
### Plot annual detectability pattern
# loop over all years
years<-sort(unique(as.numeric((dat$year))))
for (xj in 1:length(years)) {
j<-years[xj]
# Get BUGS estimates
res.chains<-out$sims.array[,,paste("lp[",xj[1],",",1:(max(dat$day)-min(dat$day)+1),"]",sep="")]
res=plogis(apply(res.chains,MARGIN=c(length(dim(res.chains))),quantile,probs=c(.025,.5,.975)))
### Plot "naive" estimate of detectability
# prepare bars to compare barplot of observation data (bars) with estimates (line); barheight represents weekly proportion of detection events divided by all surveys
barwidth<-7
z<-1
for(m in seq(from=min(dat$day),to=max(dat$day),by=barwidth)) {
dat$barpos[dat$day >= m & dat$day < m+barwidth]<-z
z<-z+1
}
barheight<-rep(NA,times=length(max(dat$day)+7)
names(barheight)<-min(dat$day):max(dat$day)+7
# height of the bars equals to a seven day successful obs to all obs ratio
n<-(max(dat$day)-min(dat$day)+1)
res.height<-tapply(dat$ndet[dat$year==j],dat$barpos[dat$year==j],mean)
barheight[as.numeric(names(res.height))*7]<-res.height
# plot bars
quartz()
barplot(as.numeric(barheight[min(dat$day):max(dat$day)]),
width=1,space=0,ylim=c(0,max(res[3,])),xlab="", ylab="Detection Probability",
main=paste("J pod",j),border=NA,axes=F)
### Plot model estimates
# plot seasonal estimates of detectability p
lines(res[3,],lty=3,col=1,lwd=2.5) # lower bound of the 95% CI
lines(res[2,],lty=1,col=1,lwd=2) # median
lines(res[1,],lty=3,col=1,lwd=2.5) # upper bound of the 95% CI
axis(2)
axis(side=1,at=c(91,122,152),
labels=c("1Apr","1May","1Jun"))
}
install_github("seananderson/glmmfields")
library(devtools)
install_github("seananderson/glmmfields")
install.packages("glmmfields")
